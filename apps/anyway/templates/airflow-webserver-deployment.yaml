{{ if .Values.enableAirflow }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-webserver
spec:
  selector:
    matchLabels:
      app: airflow-webserver
  replicas: 1
  revisionHistoryLimit: 5
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: airflow-webserver
    spec:
      terminationGracePeriodSeconds: 240
      containers:
        - name: webserver
          image: {{ if .Values.useDevImages }}{{ .Values.airflowImageDev }}{{ else }}{{ .Values.airflowImage }}{{ end }}
          resources: {{ toYaml .Values.airflowWebserver.resources | nindent 12 }}
          env:
            - name: ANYWAY_ETL_AIRFLOW_INITIALIZE
              value: "yes"
            - name: ANYWAY_ETL_AIRFLOW_ROLE
              value: "webserver"
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              valueFrom: {"secretKeyRef": {"name":"anyway", "key":"AIRFLOW_SQLALCHEMY_URL"}}
            - name: ANYWAY_ETL_AIRFLOW_ADMIN_PASSWORD
              valueFrom: {"secretKeyRef": {"name":"anyway", "key":"AIRFLOW_ADMIN_PASSWORD"}}
            - name: AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION
              value: {{ .Values.AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION | quote }}
          volumeMounts:
            - name: airflow-home
              mountPath: /var/airflow
      volumes:
        - name: airflow-home
          nfs:
            server: {{ .Values.nfsServer | quote }}
            path: {{ .Values.airflowHomeNfsPath | quote }}
{{ end }}